name: Build and Push Docker Image

on:
  push:
    branches:
      - dev
      - main
      - feat/*

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 저장소 클론
      - name: Checkout code
        uses: actions/checkout@v3
      # 2. Env 설정
      - name: Determine environment
        id: set-env
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "ENV=production" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "ENV=development" >> $GITHUB_ENV
          else
            echo "ENV=local" >> $GITHUB_ENV
          fi

      # updated
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 2. AWS 로그인
      - name: Log in to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # 3. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build --build-arg ENV=${{ env.ENV }} -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambda-fastapi:${{ github.sha }} .

      # 4. Docker 이미지 푸시
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambda-fastapi:${{ github.sha }}

      # 5. Lambda 함수 업데이트
      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name lambdaProtoContainer \
            --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambda-fastapi:${{ github.sha }}
