name: Build and Push Docker Image

on:
  push:
    branches:
      - dev
      - main
      - feat/*

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 저장소 클론
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Env 설정 (JSON에서 API_KEY 추출)
      - name: Set Environment Variables
        run: |
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "${{ secrets.DEV_ENV }}" > env.json
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "${{ secrets.PROD_ENV }}" > env.json
          else
            echo "ENVIRONMENT=local" >> $GITHUB_ENV
            echo "${{ secrets.LOCAL_ENV }}" > env.json

          # JSON 파일에서 API 키 추출
          PERPLEXITY_API_KEY=$(jq -r '.PERPLEXITY_API_KEY' env.json)
          ANTHROPIC_API_KEY=$(jq -r '.ANTHROPIC_API_KEY' env.json)

          echo "PERPLEXITY_API_KEY=$PERPLEXITY_API_KEY" >> $GITHUB_ENV
          echo "ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY" >> $GITHUB_ENV
        shell: bash

      - name: Log Environment
        run: |
          echo "Running in ${{ env.ENVIRONMENT }} environment"
          echo "PERPLEXITY_API_KEY: ${{ env.PERPLEXITY_API_KEY }}"
          echo "ANTHROPIC_API_KEY: ${{ env.ANTHROPIC_API_KEY }}"

      # AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # AWS ECR 로그인
      - name: Log in to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build \
            --build-arg ENV=${{ env.ENVIRONMENT }} \
            --build-arg PERPLEXITY_API_KEY=${{ env.PERPLEXITY_API_KEY }} \
            --build-arg ANTHROPIC_API_KEY=${{ env.ANTHROPIC_API_KEY }} \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambda-fastapi:${{ github.sha }} .

      # Docker 이미지 푸시
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambda-fastapi:${{ github.sha }}

      # Lambda 함수 업데이트
      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name lambdaProtoContainer \
            --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambda-fastapi:${{ github.sha }}
